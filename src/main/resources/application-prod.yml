# Production Profile Configuration
# Uses PostgreSQL with production-ready settings

spring:
  # PostgreSQL Database Configuration
  datasource:
    url: jdbc:postgresql://${PROD_DB_HOST:localhost}:${PROD_DB_PORT:5432}/${PROD_DB_NAME:knowledge_tracker}
    driver-class-name: org.postgresql.Driver
    username: ${PROD_DB_USERNAME:postgres}
    password: ${PROD_DB_PASSWORD:changeme}
    hikari:
      maximum-pool-size: ${PROD_DB_POOL_SIZE:20}
      minimum-idle: ${PROD_DB_MIN_IDLE:5}
      connection-timeout: ${PROD_DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${PROD_DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${PROD_DB_MAX_LIFETIME:1800000}
      leak-detection-threshold: ${PROD_DB_LEAK_DETECTION_THRESHOLD:60000}

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate  # Never auto-create schema in production
    show-sql: false  # Disable SQL logging in production
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        cache:
          use_second_level_cache: false

  sql:
    init:
      mode: never  # Don't run schema/data scripts in production

# Production Logging (JSON format for log aggregation)
logging:
  level:
    root: WARN
    com.pragma.vc.tracker: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate: WARN
  pattern:
    console: '{"timestamp": "%d{yyyy-MM-dd HH:mm:ss.SSS}", "level": "%level", "logger": "%logger{36}", "message": "%msg"}%n'

# Server Configuration
server:
  port: ${PROD_SERVER_PORT:8080}
  error:
    include-message: never  # Don't expose internal error messages
    include-binding-errors: never
    include-stacktrace: never  # Never show stacktrace in production
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  http2:
    enabled: true

# Actuator Configuration (for monitoring)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true